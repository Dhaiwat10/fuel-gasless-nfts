/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.71.0
  Forc version: 0.48.1
  Fuel-Core version: 0.22.0
*/

import { Interface, Contract, ContractFactory } from "fuels";
import type { Provider, Account, AbstractAddress, BytesLike, DeployContractOptions, StorageSlot } from "fuels";
import type { GasPredicateAbi, GasPredicateAbiInterface } from "../GasPredicateAbi";

const _abi = {
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 4,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        4
      ]
    },
    {
      "typeId": 4,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "raw untyped ptr",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 6,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 1,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "struct RawVec",
      "components": [
        {
          "name": "ptr",
          "type": 5,
          "typeArguments": null
        },
        {
          "name": "cap",
          "type": 10,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        4
      ]
    },
    {
      "typeId": 9,
      "type": "struct Vec",
      "components": [
        {
          "name": "buf",
          "type": 8,
          "typeArguments": [
            {
              "name": "",
              "type": 4,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "len",
          "type": 10,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        4
      ]
    },
    {
      "typeId": 10,
      "type": "u64",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "sub_ids",
          "type": 9,
          "typeArguments": [
            {
              "name": "",
              "type": 1,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "signature_index",
          "type": 3,
          "typeArguments": [
            {
              "name": "",
              "type": 10,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "main",
      "output": {
        "name": "",
        "type": 2,
        "typeArguments": null
      },
      "attributes": null
    }
  ],
  "loggedTypes": [],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "SIGNER",
      "configurableType": {
        "name": "",
        "type": 6,
        "typeArguments": []
      },
      "offset": 8156
    },
    {
      "name": "NFT_CONTRACT_ID",
      "configurableType": {
        "name": "",
        "type": 7,
        "typeArguments": []
      },
      "offset": 8116
    },
    {
      "name": "PACKET_MINTER_CONTRACT_ID",
      "configurableType": {
        "name": "",
        "type": 7,
        "typeArguments": []
      },
      "offset": 8196
    },
    {
      "name": "EXPECTED_SCRIPT_BYTECODE_HASH",
      "configurableType": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "offset": 8076
    }
  ]
};

const _storageSlots: StorageSlot[] = [];

export class GasPredicateAbi__factory {
  static readonly abi = _abi;

  static readonly storageSlots = _storageSlots;

  static createInterface(): GasPredicateAbiInterface {
    return new Interface(_abi) as unknown as GasPredicateAbiInterface
  }

  static connect(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ): GasPredicateAbi {
    return new Contract(id, _abi, accountOrProvider) as unknown as GasPredicateAbi
  }

  static async deployContract(
    bytecode: BytesLike,
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<GasPredicateAbi> {
    const factory = new ContractFactory(bytecode, _abi, wallet);

    const { storageSlots } = GasPredicateAbi__factory;

    const contract = await factory.deployContract({
      storageSlots,
      ...options,
    });

    return contract as unknown as GasPredicateAbi;
  }
}
